syntax = "proto3";

package email;

option go_package = "booking-system/email-worker/protos";


import "google/protobuf/timestamp.proto";

// Email Service provides gRPC endpoints for email job management
service EmailService {
  // Email job management
  rpc CreateEmailJob(CreateEmailJobRequest) returns (CreateEmailJobResponse);
  rpc CreateTrackedEmailJob(CreateEmailJobRequest) returns (CreateEmailJobResponse);
  rpc GetEmailJob(GetEmailJobRequest) returns (GetEmailJobResponse);
  rpc GetJobStatus(GetJobStatusRequest) returns (GetJobStatusResponse);
  rpc UpdateEmailJobStatus(UpdateEmailJobStatusRequest) returns (UpdateEmailJobStatusResponse);
  rpc ListEmailJobs(ListEmailJobsRequest) returns (ListEmailJobsResponse);
  rpc GetJobStats(GetJobStatsRequest) returns (GetJobStatsResponse);
  rpc GetQueueStats(GetQueueStatsRequest) returns (GetQueueStatsResponse);
  
  // Email templates
  rpc GetEmailTemplate(GetEmailTemplateRequest) returns (GetEmailTemplateResponse);
  rpc ListEmailTemplates(ListEmailTemplatesRequest) returns (ListEmailTemplatesResponse);
  rpc CreateEmailTemplate(CreateEmailTemplateRequest) returns (CreateEmailTemplateResponse);
  rpc UpdateEmailTemplate(UpdateEmailTemplateRequest) returns (UpdateEmailTemplateResponse);
  rpc DeleteEmailTemplate(DeleteEmailTemplateRequest) returns (DeleteEmailTemplateResponse);
  
  // Email tracking
  rpc GetEmailTracking(GetEmailTrackingRequest) returns (GetEmailTrackingResponse);
  rpc UpdateEmailTracking(UpdateEmailTrackingRequest) returns (UpdateEmailTrackingResponse);
  
  // Health check
  rpc Health(HealthRequest) returns (HealthResponse);
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Email Verification Service
service EmailVerificationService {
  // Send verification email with PIN code
  rpc SendVerificationEmail(SendVerificationEmailRequest) returns (SendVerificationEmailResponse);
  
  // Send verification reminder email
  rpc SendVerificationReminder(SendVerificationReminderRequest) returns (SendVerificationReminderResponse);
  
  // Validate PIN code
  rpc ValidatePinCode(ValidatePinCodeRequest) returns (ValidatePinCodeResponse);
  
  // Resend verification email
  rpc ResendVerificationEmail(ResendVerificationEmailRequest) returns (ResendVerificationEmailResponse);
}

// Email Job Management
message CreateEmailJobRequest {
  string job_type = 1;
  string recipient_email = 2;
  repeated string to = 3;
  repeated string cc = 4;
  repeated string bcc = 5;
  string subject = 6;
  string template_name = 7;
  string template_id = 8;
  map<string, string> variables = 9;
  map<string, string> template_data = 10;
  JobPriority priority = 11;
  int32 max_retries = 12;
  google.protobuf.Timestamp scheduled_at = 13;
  bool is_tracked = 14;
}

message CreateEmailJobResponse {
  string job_id = 1;
  bool success = 2;
  string message = 3;
  bool is_tracked = 4;
  EmailJob job = 5;
}

message GetEmailJobRequest {
  int64 job_id = 1;
}

message GetEmailJobResponse {
  bool success = 1;
  string message = 2;
  EmailJob job = 3;
}

message GetJobStatusRequest {
  string job_id = 1;
}

message GetJobStatusResponse {
  string job_id = 1;
  JobStatus status = 2;
  int32 retry_count = 3;
  string error_message = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  google.protobuf.Timestamp completed_at = 7;
  bool success = 8;
  string message = 9;
}

message UpdateEmailJobStatusRequest {
  int64 job_id = 1;
  string status = 2; // "pending", "processing", "sent", "failed", "cancelled"
  string error_message = 3;
  string sent_at = 4; // ISO 8601 timestamp
}

message UpdateEmailJobStatusResponse {
  bool success = 1;
  string message = 2;
  EmailJob job = 3;
}

message ListEmailJobsRequest {
  string status = 1;
  string job_type = 2;
  string user_id = 3;
  string email = 4;
  int32 page = 5;
  int32 limit = 6;
}

message ListEmailJobsResponse {
  bool success = 1;
  string message = 2;
  repeated EmailJob jobs = 3;
  int32 total = 4;
  int32 page = 5;
  int32 limit = 6;
}

message GetJobStatsRequest {
  string time_range = 1; // e.g., "1h", "24h", "7d", "30d"
}

message GetJobStatsResponse {
  int64 total_jobs = 1;
  int64 completed_jobs = 2;
  int64 failed_jobs = 3;
  int64 pending_jobs = 4;
  int64 retried_jobs = 5;
  double success_rate = 6;
  double average_processing_time = 7;
  bool success = 8;
  string message = 9;
}

message GetQueueStatsRequest {}

message GetQueueStatsResponse {
  int64 queue_size = 1;
  int64 scheduled_queue_size = 2;
  int32 active_workers = 3;
  bool success = 4;
  string message = 5;
}

// Email Templates
message GetEmailTemplateRequest {
  string template_id = 1;
  string name = 2;
}

message GetEmailTemplateResponse {
  bool success = 1;
  string message = 2;
  EmailTemplate template = 3;
}

message ListEmailTemplatesRequest {
  bool is_active = 1;
  int32 page = 2;
  int32 limit = 3;
}

message ListEmailTemplatesResponse {
  bool success = 1;
  string message = 2;
  repeated EmailTemplate templates = 3;
  int32 total = 4;
}

message CreateEmailTemplateRequest {
  string id = 1;
  string name = 2;
  string subject = 3;
  string html_content = 4;
  string html_template = 5;
  string text_content = 6;
  string text_template = 7;
  string variables = 8; // JSON array string
  map<string, string> variables_map = 9;
  bool is_active = 10;
}

message CreateEmailTemplateResponse {
  string template_id = 1;
  bool success = 2;
  string message = 3;
  EmailTemplate template = 4;
}

message UpdateEmailTemplateRequest {
  string template_id = 1;
  string id = 2;
  string name = 3;
  string subject = 4;
  string html_content = 5;
  string html_template = 6;
  string text_content = 7;
  string text_template = 8;
  string variables = 9; // JSON array string
  map<string, string> variables_map = 10;
  bool is_active = 11;
}

message UpdateEmailTemplateResponse {
  string template_id = 1;
  bool success = 2;
  string message = 3;
  EmailTemplate template = 4;
}

message DeleteEmailTemplateRequest {
  string template_id = 1;
}

message DeleteEmailTemplateResponse {
  bool success = 1;
  string message = 2;
}

// Email Tracking
message GetEmailTrackingRequest {
  int64 job_id = 1;
  string message_id = 2;
}

message GetEmailTrackingResponse {
  bool success = 1;
  string message = 2;
  EmailTracking tracking = 3;
}

message UpdateEmailTrackingRequest {
  int64 job_id = 1;
  string provider = 2;
  string message_id = 3;
  string status = 4; // "sent", "delivered", "bounced", "opened", "clicked"
  string sent_at = 5; // ISO 8601 timestamp
  string delivered_at = 6; // ISO 8601 timestamp
  string opened_at = 7; // ISO 8601 timestamp
  string clicked_at = 8; // ISO 8601 timestamp
  string bounce_reason = 9;
}

message UpdateEmailTrackingResponse {
  bool success = 1;
  string message = 2;
  EmailTracking tracking = 3;
}

// Health check
message HealthRequest {}

message HealthResponse {
  string status = 1;
  string timestamp = 2;
  string version = 3;
}

message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  string version = 2;
  google.protobuf.Timestamp timestamp = 3;
  int64 uptime_seconds = 4;
  bool queue_healthy = 5;
  bool database_healthy = 6;
  map<string, bool> providers_healthy = 7;
  string message = 8;
}

// Email Verification
message SendVerificationEmailRequest {
  string user_id = 1;
  string user_email = 2;
  string user_name = 3;
  string pin_code = 4;  // Optional, will generate if not provided
  int32 expiry_time = 5;  // in minutes, default 15
  string verification_url = 6;
}

message SendVerificationEmailResponse {
  bool success = 1;
  string message = 2;
  string job_id = 3;
  string pin_code = 4;  // Generated PIN code
  int64 expiry_timestamp = 5;
}

message SendVerificationReminderRequest {
  string user_id = 1;
  string user_email = 2;
  string user_name = 3;
  string verification_url = 4;
}

message SendVerificationReminderResponse {
  bool success = 1;
  string message = 2;
  string job_id = 3;
  string pin_code = 4;  // New PIN code
  int64 expiry_timestamp = 5;
}

message ValidatePinCodeRequest {
  string user_id = 1;
  string pin_code = 2;
  int64 expiry_timestamp = 3;
}

message ValidatePinCodeResponse {
  bool valid = 1;
  string message = 2;
  bool expired = 3;
}

message ResendVerificationEmailRequest {
  string user_id = 1;
  string user_email = 2;
  string user_name = 3;
  string verification_url = 4;
}

message ResendVerificationEmailResponse {
  bool success = 1;
  string message = 2;
  string job_id = 3;
  string pin_code = 4;  // New PIN code
  int64 expiry_timestamp = 5;
}

// Data structures
message EmailJob {
  string id = 1;
  repeated string to = 2;
  repeated string cc = 3;
  repeated string bcc = 4;
  string template_name = 5;
  string template_id = 6;
  map<string, string> variables = 7;
  JobStatus status = 8;
  JobPriority priority = 9;
  int32 retry_count = 10;
  int32 max_retries = 11;
  string error_message = 12;
  string processed_at = 13;
  string sent_at = 14;
  string created_at = 15;
  string updated_at = 16;
  google.protobuf.Timestamp created_timestamp = 17;
  google.protobuf.Timestamp updated_timestamp = 18;
  google.protobuf.Timestamp completed_timestamp = 19;
}

message EmailTemplate {
  string id = 1;
  string name = 2;
  string subject = 3;
  string html_template = 4;
  string text_template = 5;
  map<string, string> variables = 6;
  bool is_active = 7;
  string created_at = 8;
  string updated_at = 9;
  google.protobuf.Timestamp created_timestamp = 10;
  google.protobuf.Timestamp updated_timestamp = 11;
}

message EmailTracking {
  int64 id = 1;
  int64 job_id = 2;
  string provider = 3;
  string message_id = 4;
  string status = 5;
  string sent_at = 6;
  string delivered_at = 7;
  string opened_at = 8;
  string clicked_at = 9;
  string bounce_reason = 10;
  string created_at = 11;
  string updated_at = 12;
}

// Enums
enum JobStatus {
  STATUS_UNKNOWN = 0;
  STATUS_PENDING = 1;
  STATUS_PROCESSING = 2;
  STATUS_COMPLETED = 3;
  STATUS_FAILED = 4;
  STATUS_CANCELLED = 5;
  STATUS_RETRYING = 6;
}

enum JobPriority {
  PRIORITY_UNKNOWN = 0;
  PRIORITY_LOW = 1;
  PRIORITY_NORMAL = 2;
  PRIORITY_HIGH = 3;
  PRIORITY_URGENT = 4;
} 