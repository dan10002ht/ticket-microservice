syntax = "proto3";

package venue;

import "google/protobuf/timestamp.proto";

// Venue Service - Core venue management
service VenueService {
  // CRUD operations for venues
  rpc CreateVenue(CreateVenueRequest) returns (CreateVenueResponse);
  rpc GetVenue(GetVenueRequest) returns (GetVenueResponse);
  rpc UpdateVenue(UpdateVenueRequest) returns (UpdateVenueResponse);
  rpc DeleteVenue(DeleteVenueRequest) returns (DeleteVenueResponse);
  rpc ListVenues(ListVenuesRequest) returns (ListVenuesResponse);
  
  // Venue search and filtering
  rpc SearchVenues(SearchVenuesRequest) returns (SearchVenuesResponse);
  rpc GetVenuesByLocation(GetVenuesByLocationRequest) returns (GetVenuesByLocationResponse);
}

// Layout Service - Canvas-based layout management
service LayoutService {
  // CRUD operations for layouts
  rpc CreateLayout(CreateLayoutRequest) returns (CreateLayoutResponse);
  rpc GetLayout(GetLayoutRequest) returns (GetLayoutResponse);
  rpc UpdateLayout(UpdateLayoutRequest) returns (UpdateLayoutResponse);
  rpc DeleteLayout(DeleteLayoutRequest) returns (DeleteLayoutResponse);
  rpc ListLayouts(ListLayoutsRequest) returns (ListLayoutsResponse);
  
  // Layout operations
  rpc SetDefaultLayout(SetDefaultLayoutRequest) returns (SetDefaultLayoutResponse);
  rpc GetDefaultLayout(GetDefaultLayoutRequest) returns (GetDefaultLayoutResponse);
  rpc ValidateLayout(ValidateLayoutRequest) returns (ValidateLayoutResponse);
}

// Zone Service - Seating zone management
service ZoneService {
  // CRUD operations for zones
  rpc CreateZone(CreateZoneRequest) returns (CreateZoneResponse);
  rpc GetZone(GetZoneRequest) returns (GetZoneResponse);
  rpc UpdateZone(UpdateZoneRequest) returns (UpdateZoneResponse);
  rpc DeleteZone(DeleteZoneRequest) returns (DeleteZoneResponse);
  rpc ListZones(ListZonesRequest) returns (ListZonesResponse);
  
  // Zone operations
  rpc GetZonesByLayout(GetZonesByLayoutRequest) returns (GetZonesByLayoutResponse);
  rpc UpdateZoneCoordinates(UpdateZoneCoordinatesRequest) returns (UpdateZoneCoordinatesResponse);
}

// Seat Service - Individual seat management
service SeatService {
  // CRUD operations for seats
  rpc CreateSeat(CreateSeatRequest) returns (CreateSeatResponse);
  rpc GetSeat(GetSeatRequest) returns (GetSeatResponse);
  rpc UpdateSeat(UpdateSeatRequest) returns (UpdateSeatResponse);
  rpc DeleteSeat(DeleteSeatRequest) returns (DeleteSeatResponse);
  
  // Bulk seat operations
  rpc CreateSeatsBulk(CreateSeatsBulkRequest) returns (CreateSeatsBulkResponse);
  rpc UpdateSeatsBulk(UpdateSeatsBulkRequest) returns (UpdateSeatsBulkResponse);
  rpc DeleteSeatsBulk(DeleteSeatsBulkRequest) returns (DeleteSeatsBulkResponse);
  
  // Seat queries
  rpc GetSeatsByZone(GetSeatsByZoneRequest) returns (GetSeatsByZoneResponse);
  rpc GetSeatsByLayout(GetSeatsByLayoutRequest) returns (GetSeatsByLayoutResponse);
  rpc GetSeatCoordinates(GetSeatCoordinatesRequest) returns (GetSeatCoordinatesResponse);
}

// =============================================================================
// Venue Service Messages
// =============================================================================

message Venue {
  string id = 1;
  string name = 2;
  string description = 3;
  string address = 4;
  string city = 5;
  string state = 6;
  string country = 7;
  string postal_code = 8;
  string phone = 9;
  string email = 10;
  string website = 11;
  int32 capacity = 12;
  string venue_type = 13;
  string amenities = 14; // JSON string
  string images = 15; // JSON string
  string coordinates = 16; // JSON string
  string status = 17;
  string created_at = 18;
  string updated_at = 19;
  string created_by = 20;
  string updated_by = 21;
}

message CreateVenueRequest {
  string name = 1;
  string description = 2;
  string address = 3;
  string city = 4;
  string state = 5;
  string country = 6;
  string postal_code = 7;
  string phone = 8;
  string email = 9;
  string website = 10;
  int32 capacity = 11;
  string venue_type = 12;
  string amenities = 13; // JSON string
  string images = 14; // JSON string
  string coordinates = 15; // JSON string
  string created_by = 16;
}

message CreateVenueResponse {
  Venue venue = 1;
  string error = 2;
}

message GetVenueRequest {
  string id = 1;
}

message GetVenueResponse {
  Venue venue = 1;
  string error = 2;
}

message UpdateVenueRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string address = 4;
  string city = 5;
  string state = 6;
  string country = 7;
  string postal_code = 8;
  string phone = 9;
  string email = 10;
  string website = 11;
  int32 capacity = 12;
  string venue_type = 13;
  string amenities = 14; // JSON string
  string images = 15; // JSON string
  string coordinates = 16; // JSON string
  string status = 17;
  string updated_by = 18;
}

message UpdateVenueResponse {
  Venue venue = 1;
  string error = 2;
}

message DeleteVenueRequest {
  string id = 1;
}

message DeleteVenueResponse {
  bool success = 1;
  string error = 2;
}

message ListVenuesRequest {
  int32 page = 1;
  int32 limit = 2;
  string status = 3;
  string venue_type = 4;
  string city = 5;
  string country = 6;
}

message ListVenuesResponse {
  repeated Venue venues = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message SearchVenuesRequest {
  string query = 1;
  int32 page = 2;
  int32 limit = 3;
}

message SearchVenuesResponse {
  repeated Venue venues = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message GetVenuesByLocationRequest {
  double latitude = 1;
  double longitude = 2;
  double radius_km = 3;
  int32 page = 4;
  int32 limit = 5;
}

message GetVenuesByLocationResponse {
  repeated Venue venues = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

// =============================================================================
// Layout Service Messages
// =============================================================================

message VenueLayout {
  string id = 1;
  string venue_id = 2;
  string name = 3;
  string description = 4;
  string layout_type = 5;
  string canvas_config = 6; // JSON string
  string seating_config = 7; // JSON string
  bool is_active = 8;
  bool is_default = 9;
  int32 version = 10;
  string created_at = 11;
  string updated_at = 12;
  string created_by = 13;
  string updated_by = 14;
}

message CreateLayoutRequest {
  string venue_id = 1;
  string name = 2;
  string description = 3;
  string layout_type = 4;
  string canvas_config = 5; // JSON string
  string seating_config = 6; // JSON string
  bool is_default = 7;
  string created_by = 8;
}

message CreateLayoutResponse {
  VenueLayout layout = 1;
  string error = 2;
}

message GetLayoutRequest {
  string id = 1;
}

message GetLayoutResponse {
  VenueLayout layout = 1;
  string error = 2;
}

message UpdateLayoutRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string layout_type = 4;
  string canvas_config = 5; // JSON string
  string seating_config = 6; // JSON string
  bool is_active = 7;
  bool is_default = 8;
  string updated_by = 9;
}

message UpdateLayoutResponse {
  VenueLayout layout = 1;
  string error = 2;
}

message DeleteLayoutRequest {
  string id = 1;
}

message DeleteLayoutResponse {
  bool success = 1;
  string error = 2;
}

message ListLayoutsRequest {
  string venue_id = 1;
  bool is_active = 2;
  int32 page = 3;
  int32 limit = 4;
}

message ListLayoutsResponse {
  repeated VenueLayout layouts = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message SetDefaultLayoutRequest {
  string id = 1;
}

message SetDefaultLayoutResponse {
  bool success = 1;
  string error = 2;
}

message GetDefaultLayoutRequest {
  string venue_id = 1;
}

message GetDefaultLayoutResponse {
  VenueLayout layout = 1;
  string error = 2;
}

message ValidateLayoutRequest {
  string canvas_config = 1; // JSON string
  string seating_config = 2; // JSON string
}

message ValidateLayoutResponse {
  bool is_valid = 1;
  repeated string errors = 2;
  string error = 3;
}

// =============================================================================
// Zone Service Messages
// =============================================================================

message SeatingZone {
  string id = 1;
  string layout_id = 2;
  string name = 3;
  string description = 4;
  string zone_type = 5;
  string color = 6;
  string coordinates = 7; // JSON string
  int32 seat_count = 8;
  int32 row_count = 9;
  int32 seats_per_row = 10;
  string pricing_category = 11;
  bool is_active = 12;
  int32 display_order = 13;
  string created_at = 14;
  string updated_at = 15;
  string created_by = 16;
  string updated_by = 17;
}

message CreateZoneRequest {
  string layout_id = 1;
  string name = 2;
  string description = 3;
  string zone_type = 4;
  string color = 5;
  string coordinates = 6; // JSON string
  int32 row_count = 7;
  int32 seats_per_row = 8;
  string pricing_category = 9;
  int32 display_order = 10;
  string created_by = 11;
}

message CreateZoneResponse {
  SeatingZone zone = 1;
  string error = 2;
}

message GetZoneRequest {
  string id = 1;
}

message GetZoneResponse {
  SeatingZone zone = 1;
  string error = 2;
}

message UpdateZoneRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string zone_type = 4;
  string color = 5;
  string coordinates = 6; // JSON string
  string pricing_category = 7;
  bool is_active = 8;
  int32 display_order = 9;
  string updated_by = 10;
}

message UpdateZoneResponse {
  SeatingZone zone = 1;
  string error = 2;
}

message DeleteZoneRequest {
  string id = 1;
}

message DeleteZoneResponse {
  bool success = 1;
  string error = 2;
}

message ListZonesRequest {
  string layout_id = 1;
  bool is_active = 2;
  int32 page = 3;
  int32 limit = 4;
}

message ListZonesResponse {
  repeated SeatingZone zones = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message GetZonesByLayoutRequest {
  string layout_id = 1;
  bool is_active = 2;
}

message GetZonesByLayoutResponse {
  repeated SeatingZone zones = 1;
  string error = 2;
}

message UpdateZoneCoordinatesRequest {
  string id = 1;
  string coordinates = 2; // JSON string
}

message UpdateZoneCoordinatesResponse {
  bool success = 1;
  string error = 2;
}

// =============================================================================
// Seat Service Messages
// =============================================================================

message Seat {
  string id = 1;
  string zone_id = 2;
  string seat_number = 3;
  string row_number = 4;
  string seat_type = 5;
  string coordinates = 6; // JSON string
  string properties = 7; // JSON string
  bool is_active = 8;
  bool is_available = 9;
  int32 display_order = 10;
  string created_at = 11;
  string updated_at = 12;
  string created_by = 13;
  string updated_by = 14;
}

message CreateSeatRequest {
  string zone_id = 1;
  string seat_number = 2;
  string row_number = 3;
  string seat_type = 4;
  string coordinates = 5; // JSON string
  string properties = 6; // JSON string
  int32 display_order = 7;
  string created_by = 8;
}

message CreateSeatResponse {
  Seat seat = 1;
  string error = 2;
}

message GetSeatRequest {
  string id = 1;
}

message GetSeatResponse {
  Seat seat = 1;
  string error = 2;
}

message UpdateSeatRequest {
  string id = 1;
  string seat_type = 2;
  string coordinates = 3; // JSON string
  string properties = 4; // JSON string
  bool is_active = 5;
  bool is_available = 6;
  int32 display_order = 7;
  string updated_by = 8;
}

message UpdateSeatResponse {
  Seat seat = 1;
  string error = 2;
}

message DeleteSeatRequest {
  string id = 1;
}

message DeleteSeatResponse {
  bool success = 1;
  string error = 2;
}

message CreateSeatsBulkRequest {
  string zone_id = 1;
  repeated SeatData seats = 2;
  string created_by = 3;
}

message SeatData {
  string seat_number = 1;
  string row_number = 2;
  string seat_type = 3;
  string coordinates = 4; // JSON string
  string properties = 5; // JSON string
  int32 display_order = 6;
}

message CreateSeatsBulkResponse {
  repeated Seat seats = 1;
  int32 created_count = 2;
  string error = 3;
}

message UpdateSeatsBulkRequest {
  repeated string seat_ids = 1;
  string seat_type = 2;
  string properties = 3; // JSON string
  bool is_active = 4;
  bool is_available = 5;
  string updated_by = 6;
}

message UpdateSeatsBulkResponse {
  int32 updated_count = 1;
  string error = 2;
}

message DeleteSeatsBulkRequest {
  repeated string seat_ids = 1;
}

message DeleteSeatsBulkResponse {
  int32 deleted_count = 1;
  string error = 2;
}

message GetSeatsByZoneRequest {
  string zone_id = 1;
  bool is_active = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetSeatsByZoneResponse {
  repeated Seat seats = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message GetSeatsByLayoutRequest {
  string layout_id = 1;
  bool is_active = 2;
  int32 page = 3;
  int32 limit = 4;
}

message GetSeatsByLayoutResponse {
  repeated Seat seats = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
  string error = 5;
}

message GetSeatCoordinatesRequest {
  string seat_id = 1;
}

message GetSeatCoordinatesResponse {
  string coordinates = 1; // JSON string
  string error = 2;
} 